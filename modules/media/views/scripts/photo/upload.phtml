<?php
/**
 * NextCMS
 * 
 * @author		Nguyen Huu Phuoc <thenextcms@gmail.com>
 * @copyright	Copyright (c) 2011 - 2012, Nguyen Huu Phuoc
 * @license		http://nextcms.org/license.txt	(GNU GPL version 2 or later)
 * @link		http://nextcms.org
 * @category	modules
 * @package		media
 * @subpackage	views
 * @since		1.0
 * @version		2012-09-26
 */

defined('APP_VALID_REQUEST') || die('You cannot access the script directly.');
?>

<?php
$this->headTitle()->set($this->translator()->_('photo.upload.title'));
?>

<div id="mediaPhotoUploadContainer" data-dojo-type="dijit/layout/BorderContainer" data-dojo-props="design: 'sidebar', gutters: false, style: 'height: 100%; width: 100%'">
	<!-- Toolbar -->
	<div data-dojo-type="dijit/Toolbar" data-dojo-props="region: 'top', splitter: false">
		<button id="mediaPhotoUploadSaveButton" data-dojo-type="dijit/form/Button" data-dojo-props="type: 'button'">
			<span class="app-icon app-icon-save"></span><br />
			<?php echo $this->translator()->_('global._share.saveAction'); ?>
			<script type="dojo/method" data-dojo-event="onClick" data-dojo-args="e">
			require([
				"dojo/dom-attr",
				"dojo/request/xhr",
				"dojo/topic",
				"dijit/registry",
				"dojo/query"
			], function(dojoDomAttr, dojoRequestXhr, dojoTopic, dijitRegistry) {
				var photos  = [];
				var albumId = dijitRegistry.byId("mediaPhotoUploadAlbumSelect").get("value");
	
				dojo.query("input[name='thumbnails[]']", "mediaPhotoUploadForm").forEach(function(node, index, arr) {
					photos.push(dojoDomAttr.get(node, "value"));
				});
	
				dijitRegistry.byId("mediaPhotoUploadStandby").set("imageText", "<?php echo $this->translator()->_('global._share.savingAction'); ?>");
				dijitRegistry.byId("mediaPhotoUploadStandby").show();
				
				dojoRequestXhr("<?php echo $this->url(array(), 'media_photo_upload'); ?>", {
					data: {
						album_id: albumId,
						"photos[]": photos,
						format: "json",
						language: "<?php echo $this->language; ?>"
					},
					handleAs: "json",
					method: "POST"
				}).then(function(data) {
					dijitRegistry.byId("mediaPhotoUploadStandby").hide();
					dojoTopic.publish("/app/media/photo/upload/onSuccess", {
						num_photos: photos.length,
						album_id: albumId
					});
				});
			});
			</script>
		</button>

		<button id="mediaPhotoUploadCancelButton" data-dojo-type="dijit/form/Button" data-dojo-props="type: 'button'">
			<span class="app-icon app-icon-cancel"></span><br />
			<?php echo $this->translator()->_('global._share.cancelAction'); ?>
			<script type="dojo/method" data-dojo-event="onClick" data-dojo-args="e">
			require(["dojo/topic"], function(dojoTopic) {
				dojoTopic.publish("/app/media/photo/upload/onCancel");
			});
			</script>
		</button>
	</div>
	<!-- /Toolbar -->

	<!-- UploadForm -->
	<div data-dojo-type="dijit/layout/BorderContainer" data-dojo-props="region: 'center', design: 'sidebar', gutters: true">
		<div data-dojo-type="dijit/layout/ContentPane" data-dojo-props="region: 'top', style: 'border: none', class: 'app-content-pane'">
			<div id="mediaPhotoUploadForm" data-dojo-type="dijit/form/Form" data-dojo-props="action: '', method: 'POST', encType: 'multipart/form-data', class: 'app-form'">
				<h2 class="app-heading" style="margin-top: 0">
					<span><?php echo $this->translator()->_('photo.upload.title'); ?> </span>
				</h2>

				<div class="app-form-row">
					<label for="album"><?php echo $this->translator()->_('photo.upload.album'); ?>:</label>
					<select id="mediaPhotoUploadAlbumSelect" data-dojo-type="dijit/form/Select" data-dojo-props="name: 'album', maxHeight: '150px'">
						<option value="">---</option>
						<?php foreach ($this->albums as $album) : ?>
						<option value="<?php echo $album->album_id; ?>"<?php if ($this->album && $this->album->album_id == $album->album_id) : ?>selected="selected" <?php endif; ?>>
							<?php echo $album->title; ?>
						</option>
						<?php endforeach; ?>
					</select>
				</div>

				<div class="app-form-row">
					<label for="newAlbum">&nbsp;</label> 
					<input id="mediaPhotoUploadNewAlbumTextBox" data-dojo-type="dijit/form/TextBox" data-dojo-props="name: 'newAlbum', width: '200px', placeHolder: '<?php echo $this->translator(true)->_('photo.upload.createAlbumHelp'); ?>'" />
					<button data-dojo-type="dijit/form/Button" data-dojo-props="type: 'button'">
						<?php echo $this->translator()->_('global._share.createAction'); ?>
						<script type="dojo/method" data-dojo-event="onClick" data-dojo-args="e">
						require([
							"dojo/request/xhr",
							"dojo/topic",
							"dijit/registry"
						], function(dojoRequestXhr, dojoTopic, dijitRegistry) {
							var title = dijit.byId("mediaPhotoUploadNewAlbumTextBox").get("value");
							if (title) {
								dojoRequestXhr("<?php echo $this->url(array(), 'media_album_add'); ?>", {
									data: {
										title: title,
										language: "<?php echo $this->language; ?>",
										format: "json"
									},
									handleAs: "json",
									method: "POST"
								}).then(function(data) {
									dijitRegistry.byId("mediaPhotoUploadNewAlbumTextBox").set("value", "");
									dijitRegistry.byId("mediaPhotoUploadAlbumSelect").addOption({
										value: data.album_id + "",
										label: title,
										selected: true
									});
									// Set the newly added album as the selected one
									dijitRegistry.byId("mediaPhotoUploadAlbumSelect").set("value", data.album_id + "");
									dojoTopic.publish("/app/media/album/add/onSuccess");
								});
							}
						});
						</script>
					</button>
				</div>
				
				<div class="app-form-row">
					<label>&nbsp;</label>
					<span id="mediaPhotoUploadWatermarkCheckBox" data-dojo-type="dijit/form/CheckBox" data-dojo-props="disabled: <?php if (($options = $this->config('file', 'watermark')) && ($options = Zend_Json::decode($options)) && ($options['using'] != 'none')) : ?>false<?php else: ?>true<?php endif; ?>">
						<script type="dojo/method" data-dojo-event="onChange">
						var that = this;
						require(["dijit/registry"], function(dijitRegistry) {
							var uploader  = dijitRegistry.byId("mediaPhotoUploadUploader");
							var watermark = that.get("checked") ? "true" : "false";
							switch (uploader.get("appUploadType")) {
								case "html5":
									uploader.set("url", "<?php echo $this->url(array(), 'file_file_upload'); ?>?PHPSESSID=<?php echo Zend_Session::getId(); ?>&mod=media&thumbnail=true&uploader=html5&name=" + uploader.get("name") + "&watermark=" + watermark);
									break;
								case "flash":
									uploader.set("url", "<?php echo $this->url(array(), 'file_file_upload'); ?>/media/true/" + watermark + "?PHPSESSID=<?php echo Zend_Session::getId(); ?>");
									break;
							}
						});
						</script>
					</span>
					<span><?php echo $this->translator()->_('photo.upload.addWatermark'); ?></span>
				</div>

				<!-- Uploader -->
				<div class="app-form-row" id="mediaPhotoUploadUploaderContainer">
					<label for="photos"><?php echo $this->translator()->_('photo.upload.selectPhotos'); ?>:</label>
					<div id="mediaPhotoUploadUploader">
					</div>
				</div>
				
				<div class="app-form-row">
					<label>&nbsp;</label>
					<?php echo sprintf($this->translator()->_('global._share.maxUploadSize'), ini_get('upload_max_filesize')); ?>
				</div>
				<!-- /Uploader -->
			</div>
		</div>

		<div data-dojo-type="dijit/layout/ContentPane" data-dojo-props="region: 'center', class: 'app-content-pane'">
			<div id="mediaPhotoUploadPhotos" class="module-media-photos"></div>
		</div>
	</div>
	<!-- /UploadForm -->
</div>

<div id="mediaPhotoUploadStandby" data-dojo-type="dojox/widget/Standby" data-dojo-props="target: 'mediaPhotoUploadContainer', centerIndicator: 'image', imageText: '<?php echo $this->translator(true)->_('global._share.loadingAction'); ?>'"></div>

<script type="text/javascript">
require([
	"dojo/_base/array",
	"dojo/dom-class",
	"dojo/dom-construct",
	"dojo/dom-style",
	"dojo/json",
	"dojo/on",
	"dojo/ready",
	"dojo/sniff",
	"dijit/registry",
	"dojo/parser",
	"dijit/form/Button",
	"dijit/form/CheckBox",
	"dijit/form/Form",
	"dijit/form/Select",
	"dijit/form/TextBox",
	"dijit/layout/BorderContainer",
	"dijit/layout/ContentPane",
	"dijit/Toolbar",
	"dojox/widget/Standby",
	"core/js/base/Encoder",
	"core/js/base/Uploader",
	"core/js/Constant"
], function(dojoArray, dojoDomClass, dojoDomConstruct, dojoDomStyle, dojoJson, dojoOn, dojoReady, dojoSniff, dijitRegistry) {
	dojoReady(function() {
		var uploadType = dojoSniff("ie") ? "flash" : "html5";

		var uploader = new core.js.base.Uploader({
			name: "photos",
			flashFieldName: "uploadedfile",
			deferredUploading: true,
			multiple: true,
			type: "file",
			uploadOnSelect: true,
			label: "<?php echo $this->translator(true)->_('global._share.browseFileAction'); ?>",
			url: ("html5" == uploadType) ? "<?php echo $this->url(array(), 'file_file_upload'); ?>?PHPSESSID=<?php echo Zend_Session::getId(); ?>&mod=media&thumbnail=true&uploader=html5&name=photos"
										 : "<?php echo $this->url(array(), 'file_file_upload'); ?>/media/true/false?PHPSESSID=<?php echo Zend_Session::getId(); ?>",
			style: "width: 150px",
			// DOJO LESSON: This is very important parameter
			// Increase it if you want to upload more files at the same time
			serverTimeout: 10000,
			
			// Custom properties and methods
			appUploadType: uploadType,

			showUploadedPhotos: function(dataArray) {
				// summary:
				//		Shows the uploaded photos
				dojoArray.forEach(dataArray, function(file) {
					var div    = dojoDomConstruct.create("div", {
						className: "module-media-photo"
					}, "mediaPhotoUploadPhotos", "last");
					var image  = dojoDomConstruct.create("img", {
						src: core.js.Constant.ROOT_URL + file.thumbnail.url,
						title: file.original.name
					}, div);
					var thumbs = {
						name: file.original.name
					};
					dojoArray.forEach(["square", "thumbnail", "small", "crop", "medium", "large", "original"], function(thumbnailSize) {
						thumbs[thumbnailSize] = file[thumbnailSize].url;
					});
					dojoDomConstruct.create("input", {
						type: "hidden",
						name: "thumbnails[]",
						value: dojoJson.stringify(thumbs)
					}, "mediaPhotoUploadForm", "last"); 
				});
			}
		}, "mediaPhotoUploadUploader");
		uploader.startup();

		dojoOn(uploader, "begin", function() {
			if ("html5" == uploader.get("appUploadType")) {
				uploader.set("disabled", true);
			}
			dijitRegistry.byId("mediaPhotoUploadStandby")
				 		 .set("centerIndicator", "image")
				 		 .set("text", "<?php echo $this->translator()->_('global._share.uploadingAction'); ?>")
				 		 .show();
		});

		dojoOn(uploader, "progress", function(evt) {
			dijitRegistry.byId("mediaPhotoUploadStandby")
						 .set("centerIndicator", "text")
						 .set("text", evt.percent);
			dojoDomStyle.set(dijitRegistry.byId("mediaPhotoUploadStandby")._textNode, {
				opacity: 1
			});
			dojoDomClass.add(dijitRegistry.byId("mediaPhotoUploadStandby")._textNode, "module-media-photo-standby");
		});
		
		dojoOn(uploader, "filecomplete", function(dataArray) {
			if ("flash" == uploader.get("appUploadType")) {
				dataArray = dataArray.additionalParams.appUploadedFiles;
				dataArray = core.js.base.Encoder.decode(dataArray);
				uploader.showUploadedPhotos(dataArray);
			}
		});

		dojoOn(uploader, "complete", function(dataArray) {
			dijitRegistry.byId("mediaPhotoUploadStandby").hide();
			if ("html5" == uploader.get("appUploadType")) {
				uploader.set("disabled", false);
				uploader.showUploadedPhotos(dataArray);
			}
		});

		// Show the message of informing the maximum upload size at the desired position
		dijitRegistry.byId("mediaPhotoUploadContainer").resize();
	});
});
</script>
