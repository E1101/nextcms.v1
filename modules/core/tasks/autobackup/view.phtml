<?php
/**
 * NextCMS
 * 
 * @author		Nguyen Huu Phuoc <thenextcms@gmail.com>
 * @copyright	Copyright (c) 2011 - 2012, Nguyen Huu Phuoc
 * @license		http://nextcms.org/license.txt	(GNU GPL version 2 or later)
 * @link		http://nextcms.org
 * @category	modules
 * @package		core
 * @subpackage	tasks
 * @since		1.0
 * @version		2012-09-15
 */

defined('APP_VALID_REQUEST') || die('You cannot access the script directly.');
?>

<script type="text/javascript">
require(["core/js/base/Resource"], function() {
	core.js.base.Resource.loadCss("<?php echo $this->APP_STATIC_URL; ?>/static/js/dojo/<?php echo APP_DOJO_VER; ?>/dojox/grid/enhanced/resources/<?php echo $this->dojoConfig()->getTheme(); ?>/EnhancedGrid.css");
});
</script>

<div data-dojo-type="dijit/layout/BorderContainer" data-dojo-props="design: 'sidebar', gutters: false, style: 'height: 100%; padding: 0; width: 100%'">
	<!-- Toolbar -->
	<div data-dojo-type="dijit/Toolbar" data-dojo-props="region: 'top', splitter: false, style: 'height: 40px'">
		<button id="coreTasksAutobackupCancelButton" data-dojo-type="dijit/form/Button" data-dojo-props="type: 'button'">
			<span class="app-icon app-icon-cancel"></span><br />
			<?php echo $this->translator()->_('_share.cancelAction'); ?>
			<script type="dojo/method" data-dojo-event="onClick" data-dojo-args="e">
			require(["dojo/topic"], function(dojoTopic) {
				dojoTopic.publish("/app/core/task/config/onCancelAction");
			});
			</script>
		</button>
	</div>
	<!-- /Toolbar -->
	
	<div data-dojo-type="dijit/layout/BorderContainer" data-dojo-props="region: 'center', design: 'sidebar', gutters: false">
		<div data-dojo-type="dijit/layout/ContentPane" data-dojo-props="region: 'top', class: 'app-content-pane'">
			<h2 class="app-heading" style="margin: 0"><span><?php echo $this->translator()->_('view.files'); ?></span></h2>
			<?php echo $this->translator()->_('view.help'); ?>
		</div>
		
		<div data-dojo-type="dijit/layout/ContentPane" data-dojo-props="region: 'center', class: 'app-content-pane'">
			<!-- FilesGrid -->
			<table id="coreTasksAutobackupViewGrid_<?php echo $this->uniqueId; ?>" data-dojo-type="dojox/grid/EnhancedGrid" data-dojo-props="plugins: {menus: {cellMenu: 'coreTasksAutobackupViewGridMenu_<?php echo $this->uniqueId; ?>'}}, loadingMessage: '<span class=dojoxGridLoading><?php echo $this->translator()->_('_share.loadingAction'); ?></span>'">
				<thead>
					<tr>
						<th field="name" width="400px"><?php echo $this->translator()->_('_share.name'); ?></th>
						<th field="last_modified" width="200px"><?php echo $this->translator()->_('_share.lastModified'); ?></th>
					</tr>
				</thead>
			</table>
			<!-- /FilesGrid -->
			
			<!-- ContextMenu -->
			<div data-dojo-type="dijit/Menu" id="coreTasksAutobackupViewGridMenu_<?php echo $this->uniqueId; ?>" style="display: none">
				<!-- RefreshItem -->
			 	<div data-dojo-type="dijit/MenuItem" data-dojo-props="iconClass: 'app-icon app-icon-refresh'">
			 		<?php echo $this->translator()->_('_share.refreshAction'); ?>
			 		<script type="dojo/method" data-dojo-event="onClick" data-dojo-args="e">
			 		require([
						"dojo/io-query",
						"dijit/registry",
			 			"dojo/data/ItemFileReadStore",
			 			"core/js/base/controllers/ActionProvider"
			 		], function(dojoIoQuery, dijitRegistry) {
			 			var grid   = dijitRegistry.byId("coreTasksAutobackupViewGrid_<?php echo $this->uniqueId; ?>");
						var	params = {
							_type: "task",
							_mod: "core",
							_name: "autobackup",
							_method: "view",
							_format: "json",
							noRenderScript: true
						};
						grid.setStore(new dojo.data.ItemFileReadStore({
							url: core.js.base.controllers.ActionProvider.get("core_extension_render").url + "?" + dojoIoQuery.objectToQuery(params)
						}));
			 		});
					</script>
				</div>
				<!-- /RefreshItem -->
			
				<!-- DeleteItem -->
			 	<div data-dojo-type="dijit/MenuItem" data-dojo-props="iconClass: 'app-icon app-icon-delete'">
			 		<?php echo $this->translator()->_('_share.deleteAction'); ?>
			 		<script type="dojo/method" data-dojo-event="onClick" data-dojo-args="e">
			 		require([
			 			"dojo/request/xhr",
			 			"dojo/topic",
			 			"dijit/registry",
						"core/js/base/controllers/ActionProvider"
			 		], function(dojoRequestXhr, dojoTopic, dijitRegistry) {
			 			var grid	 = dijitRegistry.byId("coreTasksAutobackupViewGrid_<?php echo $this->uniqueId; ?>");
						var rowIndex = grid.selection.selectedIndex;
						var item	 = grid.getItem(rowIndex);
						if (item) {
							dojoRequestXhr(core.js.base.controllers.ActionProvider.get("core_extension_render").url, {
								data: {
									_type: "task",
									_mod: "core",
									_name: "autobackup",
									_method: "delete",
									_format: "json",
									noRenderScript: true,
									name: item.name[0]
								},
								handleAs: "json",
								method: "GET"
							}).then(function(data) {
								var message = ("APP_RESULT_OK" == data.result)
											? "<?php echo $this->translator()->_('delete.success'); ?>" 
											: "<?php echo $this->translator()->_('delete.error'); ?>";
								dojoTopic.publish("/app/global/notification", {
									message: message,
									type: ("APP_RESULT_OK" == data.result) ? "message" : "error"
								});
							});
						}
			 		});
					</script>
				</div>
				<!-- /DeleteItem -->
			
				<!-- DownloadItem -->
			 	<div data-dojo-type="dijit/MenuItem" data-dojo-props="iconClass: 'app-icon app-icon-download'">
			 		<?php echo $this->translator()->_('_share.downloadAction'); ?>
			 		<script type="dojo/method" data-dojo-event="onClick" data-dojo-args="e">
			 		require([
			 			"dojo/request/iframe",
			 			"dijit/registry",
						"core/js/base/controllers/ActionProvider"
			 		], function(dojoRequestIframe, dijitRegistry) {
			 			var grid	 = dijitRegistry.byId("coreTasksAutobackupViewGrid_<?php echo $this->uniqueId; ?>");
						var rowIndex = grid.selection.selectedIndex;
						var item	 = grid.getItem(rowIndex);
						if (item) {
							dojoRequestIframe(core.js.base.controllers.ActionProvider.get("core_extension_render").url, {
								data: {
									_type: "task",
									_mod: "core",
									_name: "autobackup",
									_method: "download",
									name: item.name[0]
								},
								method: "GET"
							});
						}
			 		});
					</script>
			 	</div>
			 	<!-- /DownloadItem -->
			</div>
			<!-- /ContextMenu -->
		</div>
	</div>
</div>

<script type="text/javascript">
require([
	"dojo/ready",
	"dojo/topic",
	"dijit/registry",
	"dojo/parser",
	"dijit/form/Button",
	"dijit/form/Form",
	"dijit/layout/BorderContainer",
	"dijit/layout/ContentPane",
	"dijit/Menu",
	"dijit/MenuItem",
	"dijit/Toolbar",
	"dojo/data/ItemFileReadStore",
	"dojox/grid/EnhancedGrid",
	"dojox/grid/enhanced/plugins/Menu"
], function(dojoReady, dojoTopic, dijitRegistry) {
	dojoReady(function() {
		var handler = dojoTopic.subscribe("/app/global/onLoadComplete/core_extension_render", function() {
			dijitRegistry.byId("coreTasksAutobackupViewGrid_<?php echo $this->uniqueId; ?>").setStore(new dojo.data.ItemFileReadStore({
				data: {
					identifier: "name",
					items: <?php echo Zend_Json::encode($this->files); ?>
				}
			}));
			handler.remove();
		});
	});
});
</script>
